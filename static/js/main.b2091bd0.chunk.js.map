{"version":3,"sources":["components/Header.jsx","components/Footer.jsx","components/Loader.jsx","components/Pagination.jsx","containers/utils.js","containers/HomePage.jsx","containers/Pokemon.jsx","containers/Types.jsx","App.js","serviceWorker.js","index.js"],"names":["Wrapper","styled","header","Header","props","children","footer","Footer","GlobalLoader","div","AppLoader","type","color","height","width","timeout","PaginateWrapper","article","Pagination","details","next","previous","totalItems","currentPage","pageSize","onClick","previousPage","className","isNull","viewBox","fill","xmlns","d","Math","ceil","nextPage","getIdFromUrl","url","split","slice","HomePage","useState","pokemons","setPokemons","totalPokemons","pagination","setPagination","setCurrentPage","isFilter","setIsFilter","types","setTypes","fetchPokemons","a","fetch","res","json","response","results","count","fetchTypes","useEffect","filterByType","event","target","value","pokemon","map","poke","detail","startIndex","endIndex","console","log","length","startPage","endPage","totalPages","min","pages","Array","from","keys","i","totalOfPages","paginate","isEmpty","onChange","disabled","selected","name","index","to","key","uniqueId","list","Pokemon","setPokemon","fetchPokemon","evolutionUrl","evol","evolutionResponse","id","match","params","alt","src","sprites","front_default","abilities","ab","slot","ability","evoChain","evoData","chain","numberOfEvolutions","evolves_to","push","species_name","get","undefined","hasOwnProperty","formatttedEvoltions","evo","Types","App","path","component","exact","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b2091bd0.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components';\n\nconst Wrapper = styled.header`\ngrid-area: header;\nheight: 180px;\npadding: 20px;\nfont-size: 30px;\nfont-weight: bold;\nmargin-bottom: 20px;\nbackground-color: #0E1111;\ncolor: #eee;\ndisplay: flex;\nalign-items: center;\njustify-content: center;\n`\n\nconst Header = (props) => {\n    return <Wrapper>{props.children}</Wrapper>\n\n}\n\nexport default Header;","import React from 'react'\nimport styled from 'styled-components';\n\nconst Wrapper = styled.footer`\n    grid-area: footer;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`\n\nconst Footer = (props) => {\n    return <Wrapper>This application was made for a challenge</Wrapper>\n\n}\n\nexport default Footer;","import React from 'react'\nimport styled from \"styled-components\";\nimport Loader from 'react-loader-spinner'\n\nconst GlobalLoader = styled.div`\nwidth: 100%;\nmin-height: 100vh;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\n`\n\nconst AppLoader = () => {\n    return (<GlobalLoader><Loader\n        type=\"Puff\"\n        color=\"#0E1111\"\n        height={100}\n        width={100}\n        timeout={10000}/>\n        </GlobalLoader>)\n}\n\nexport default AppLoader;","import React from \"react\";\nimport { isNull } from \"lodash\";\nimport styled from \"styled-components\";\n\nconst PaginateWrapper = styled.article`\n    width: 100%;\n    padding: 10px;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n  .paginate {\n    cursor: pointer;\n  }\n  .disabled {\n    cursor: not-allowed;\n  }\n  .pagination-counter {\n    font-size: 18px;\n  }\n`;\n\nconst Pagination = (props) => {\nconst { next, previous, totalItems, currentPage, pageSize  } = props.details\n  return (\n    <PaginateWrapper>\n      <div\n        onClick={props.previousPage}\n        className={!isNull(previous) ? \"paginate\" : \"disabled\"}\n      >\n        <svg\n          height=\"64\"\n          viewBox=\"0 0 24 24\"\n          width=\"64\"\n          fill={!isNull(previous) ? \"#000\" : \"#d3d3d3\"}\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path d=\"M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z\" />\n          <path d=\"M0-.5h24v24H0z\" fill=\"none\" />\n        </svg>\n      </div>\n\n      <div className=\"pagination-counter\">\n        {currentPage} of {Math.ceil(totalItems/pageSize)}\n      </div>\n      <div\n        onClick={props.nextPage}\n        className={!isNull(next) ? \"paginate\" : \"disabled\"}\n      >\n        <svg\n          height=\"64\"\n          fill={!isNull(next) ? \"#000\" : \"#d3d3d3\"}\n          viewBox=\"0 0 24 24\"\n          width=\"64\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path d=\"M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z\" />\n          <path d=\"M0-.25h24v24H0z\" fill=\"none\" />\n        </svg>\n      </div>\n    </PaginateWrapper>\n  );\n};\n\nexport default Pagination;\n","export const paginate = (\n    totalItems,\n    currentPage= 1,\n    pageSize = 20,\n) => {\n    \n    let totalPages = Math.ceil(totalItems / pageSize);\n\n    if (currentPage < 1) {\n        currentPage = 1;\n    } else if (currentPage > totalPages) {\n        currentPage = totalPages;\n    }\n\n    let startPage, endPage;\n        startPage = 1;\n        endPage = totalPages;\n\n    let startIndex = (currentPage - 1) * pageSize;\n    let endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\n\n    let pages = Array.from(Array((endPage + 1) - startPage).keys()).map(i => startPage + i);\n\n    return {\n        totalItems: totalItems,\n        currentPage: currentPage,\n        pageSize: pageSize,\n        totalOfPages: totalPages,\n        startPage: startPage,\n        endPage: endPage,\n        startIndex: startIndex,\n        endIndex: endIndex,\n        pages: pages\n    };\n}\n\nexport const getIdFromUrl = (url) => url.split(\"/\").slice(-2)[0]\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { uniqueId, isEmpty } from \"lodash\";\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\nimport AppLoader from \"../components/Loader\";\nimport Pagination from \"../components/Pagination\";\nimport { paginate, getIdFromUrl } from \"./utils\";\nimport { Link } from \"react-router-dom\";\n\n\nconst Wrapper = styled.div`\n  width: 100%;\n  min-height: 100vh;\n  position: relative;\n  display: grid;\n  grid-template-rows: 1.25fr 6fr 1fr;\n  grid-template-areas: \"header header header\" \"content content content\" \"footer footer footer\";\n  background: #e2e1e0;\n  section {\n    grid-area: content;\n    display: flex;\n    flex-direction: column;\n    width: 55%;\n    margin: 30px auto;\n    color: #000;\n  }\n  .pokemons-container {\n    display: flex;\n    flex-wrap: wrap;\n    align-content: flex-start;\n  }\n  .pokemon {\n    padding: 10px;\n    margin: 15px;\n    width: 150px;\n    height: 100px;\n    box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n    transition: all 0.3s cubic-bezier(.25,.8,.25,1);\n    background: #fff;\n    display: flex;\n    font-size: 20px;\n    align-items: center;\n    justify-content: center;\n  }\n  .pokemon:hover {\n    box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);  \n  }\n  .filter{\n      padding: 20px;\n      width: 50%;\n  }\n  .filter select {\n      width: 150px;\n      height: 30px;\n  }\n`;\n\n\nconst HomePage = () => {\n  const [pokemons, setPokemons] = useState([]);\n\n  const [pagination, setPagination] = useState({totalPokemons: null, pageSize: 20});\n  const [currentPage, setCurrentPage] = useState(1);\n  const [isFilter, setIsFilter] = useState(false)\n  const [types, setTypes] = useState([]);\n  \n\n  const fetchPokemons = async (url) => {\n    const res = await fetch(\n      url\n    );\n    const response = await res.json();\n    setPokemons(response.results);\n    setPagination({ totalPokemons: response.count, previous: response.previous,next: response.next})    \n  };\n\n  const fetchTypes = async (url) => {\n    const res = await fetch(\n      url\n    );\n    const response = await res.json();\n    setTypes(response.results)\n  };\n\n  useEffect(() => {\n    fetchPokemons('https://pokeapi.co/api/v2/pokemon');\n    fetchTypes('https://pokeapi.co/api/v2/type')\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  const filterByType = async (event) => {\n    setIsFilter(true)\n    const res = await fetch(\n        `${event.target.value}`\n      );\n      const response = await res.json();\n      const pokemons = response.pokemon.map((poke)=>poke.pokemon).slice(detail.startIndex, detail.endIndex)\n      console.log('pokemons: ', pokemons);\n      setPokemons(pokemons) \n      setPagination({...pagination, totalPokemons: pokemons.length, next: null, previous: null})\n  }\n\n  const nextPage = () => {\n      const activePage = currentPage + 1;\n      setCurrentPage(activePage)\n      if(isFilter){\n        const list = pokemons.slice(detail.startIndex, detail.endIndex)\n        setPokemons(list)\n      }else {\n        fetchPokemons(pagination.next)\n      }   \n  }\n\n  const previousPage = () => {\n    const activePage = currentPage - 1;\n    setCurrentPage(activePage)\n    if(isFilter){\n      const list = pokemons.slice(detail.startIndex, detail.endIndex)\n      setPokemons(list)\n    }else {\n      fetchPokemons(pagination.previous)\n    }\n  }\n\nconst { totalPokemons, pageSize, next, previous } = pagination;\nconst detail = paginate(totalPokemons, currentPage, pageSize)\n\n  if(isEmpty(pokemons) && !isFilter) return <AppLoader/>\n\n  return (\n    <Wrapper>\n      <Header>Pokemon</Header>\n      <section>\n      <article className=\"filter\">\n        <select onChange={filterByType}>\n        <option disabled selected value> -- select an option -- </option>\n          {types.map((type)=><option value={type.url}>{type.name}</option> )}\n        </select>\n        </article>\n        <article className=\"pokemons-container\">\n          {pokemons?.map((pokemon, index) => (\n            <Link to={`/pokemon/${getIdFromUrl(pokemon.url)}`}><div className=\"pokemon\" key={uniqueId()}>\n              {pokemon.name}\n            </div>\n            </Link>\n          ))}\n          {isEmpty(pokemons) && isFilter && <div>No results</div>}\n        </article>\n        {!isEmpty(pokemons) && <Pagination details={{...detail, next, previous}} nextPage={nextPage} previousPage={previousPage} />}\n      </section>\n      <Footer/>\n    </Wrapper>\n  );\n};\n\nexport default HomePage;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { uniqueId, isEmpty, get } from \"lodash\";\nimport AppLoader from \"../components/Loader\";\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\nimport { Link } from \"react-router-dom\";\nimport { getIdFromUrl } from \"./utils\";\n\n\n\nconst Wrapper = styled.div`\n  width: 100%;\n  min-height: 50vh;\n  position: relative;\n  display: grid;\n  grid-template-rows: 1fr 6fr 1fr;\n  grid-template-areas: \"header header header\" \"content content content\" \"footer footer footer\";\n  background: #e2e1e0;\n  main {\n    grid-area: content;\n    display: flex;\n    flex-direction: column;\n    width: 55%;\n    margin: 30px auto;\n    color: #000;\n  }\n  .pokemon-detail {\n    padding: 20px;\n    width: 80%;\n    margin: 0 auto;\n    background-color: #fff;\n    display: flex;\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n    transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);\n  }\n  img {\n    width: 150px;\n  }\n  .detail {\n    padding: 20px;\n    background-color: #eee;\n    width: 70%;\n    display: column;\n  }\n  .name {\n    font-size: 18px;\n    font-family: Roboto;\n    font-weight: bold;\n    text-transform: uppercase;\n  }\n  .type,\n  .abilities,\n  .evolution {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n  }\n  .type div,\n  .abilities div,\n  .evolution div {\n    margin-left: -35px;\n  }\n`;\n\n\nconst Pokemon = (props) => {\n  const [pokemon, setPokemon] = useState({});\n\n  useEffect(() => {\n    const fetchPokemon = async (url, evolutionUrl) => {\n      const res = await fetch(url);\n      const evol = await fetch(evolutionUrl);\n      const evolutionResponse = await evol.json();\n      const response = await res.json();\n\n      setPokemon({ ...response, ...evolutionResponse });\n    };\n\n    const id = props.match.params.id;\n    fetchPokemon(\n      `https://pokeapi.co/api/v2/pokemon/${id}`,\n      `https://pokeapi.co/api/v2/evolution-chain/${id}/`\n    );\n  }, [props.match.params.id]);\n\n  const formatttedEvoltions = () => {\n    let evoChain = [];\n    let evoData = pokemon.chain;\n\n    do {\n      let numberOfEvolutions = evoData.evolves_to.length;\n\n      evoChain.push({\n        species_name: get(evoData, \"species.name\"),\n      });\n\n      if (numberOfEvolutions > 1) {\n        for (let i = 1; i < numberOfEvolutions; i++) {\n          evoChain.push({\n            species_name: get(evoData.evolves_to[i], \"species.name\"),\n          });\n        }\n      }\n\n      evoData = evoData.evolves_to[0];\n    } while (evoData !== undefined && evoData.hasOwnProperty(\"evolves_to\"));\n\n    return evoChain;\n  };\n\n  if (isEmpty(pokemon)) return <AppLoader/>\n\n  return (\n    <Wrapper>\n      <Header>{pokemon.name}</Header>\n      <main>\n        <section className=\"pokemon-detail\">\n          <article className=\"img\">\n            <img alt={pokemon.name} src={pokemon.sprites.front_default} />\n          </article>\n          <article className=\"detail\">\n            <div className=\"name\">{pokemon.name}</div>\n            <ul className=\"type\">\n              <div>Types</div>\n              {pokemon.types.map((type) => (\n                <Link to={`/types/${getIdFromUrl(type.type.url)}`}><li key={uniqueId(`${pokemon.name}`)}>{type.type.name}</li></Link>\n              ))}\n            </ul>\n            <ul className=\"abilities\">\n              <div>Abilities</div>\n              {pokemon.abilities.map((ab) => (\n                <li key={ab.slot}>{ab.ability.name}</li>\n              ))}\n            </ul>\n            <ul className=\"evolution\">\n              <div>Evolutions</div>\n              {formatttedEvoltions().map((evo) => (\n                <li key={uniqueId()}>{evo.species_name}</li>\n              ))}\n            </ul>\n          </article>\n        </section>\n      </main>\n      <Footer/>\n    </Wrapper>\n  );\n};\n\nexport default Pokemon;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { uniqueId, isEmpty } from \"lodash\";\nimport AppLoader from \"../components/Loader\";\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\n\nconst Wrapper = styled.div`\n  width: 100%;\n  min-height: 100vh;\n  position: relative;\n  display: grid;\n  grid-template-rows: 1fr 6fr 1fr;\n  grid-template-areas: \"header header header\" \"content content content\" \"footer footer footer\";\n  background: #e2e1e0;\n  main {\n    grid-area: content;\n    width: 90%;\n    margin: 0 auto;\n    color: #000;\n  }\n  .types-container {\n    display: flex;\n    flex-wrap: wrap;\n    align-content: flex-start;\n  }\n  .types {\n    padding: 10px;\n    margin: 15px;\n    width: 150px;\n    height: 100px;\n    box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n    transition: all 0.3s cubic-bezier(.25,.8,.25,1);\n    background: #fff;\n    display: flex;\n    font-size: 20px;\n    align-items: center;\n    justify-content: center;\n  }\n  .types:hover {\n    box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);  \n  }\n`;\n\n\nconst Types = (props) => {\n  const [types, setTypes] = useState([]);\n\n  useEffect(() => {\n    const fetchPokemon = async (url) => {\n      const res = await fetch(url);\n      const response = await res.json();\n\n      setTypes(response);\n    };\n\n    const type = props.match.params.type;\n    fetchPokemon(\n      `https://pokeapi.co/api/v2/type/${type}`,\n    );\n  }, [props.match.params.type]);\n\n  if (isEmpty(types))\n    return (\n      <AppLoader/>\n    );\n\n  return (\n    <Wrapper>\n      <Header>Types</Header>\n      <main>\n        <section className=\"types-container\">\n         {types.pokemon.map(type=>(\n             <div key={uniqueId()} className=\"types\">\n                 {type.pokemon.name}\n             </div>\n         ))}\n        </section>\n      </main>\n      <Footer/>\n    </Wrapper>\n  );\n};\n\nexport default Types;\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport HomePage from './containers/HomePage'\nimport Pokemon from './containers/Pokemon';\nimport Types from './containers/Types';\n\nfunction App() {\n  return (\n    <div>\n     <BrowserRouter>\n     <Switch>\n       <Route path=\"/\"  component={HomePage} exact/>\n       <Route path=\"/pokemon/:id\"  component={Pokemon}/>\n       <Route path=\"/types/:type\"  component={Types}/>\n     </Switch>\n     </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}