{"version":3,"sources":["components/Header.jsx","components/Footer.jsx","components/Loader.jsx","components/Pagination.jsx","translations/index.js","containers/LocaleProvider/helper.js","containers/LocaleProvider/reducer.js","containers/LocaleProvider/constants.js","containers/LocaleProvider/index.jsx","containers/Pokemons/utils.js","containers/Pokemons/messages.js","containers/Pokemons/HomePage.jsx","containers/Pokemons/Pokemon.jsx","containers/Pokemons/Types.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["Wrapper","styled","header","Header","props","children","footer","Footer","GlobalLoader","div","AppLoader","type","color","height","width","timeout","PaginateWrapper","article","Pagination","details","next","previous","totalItems","currentPage","pageSize","isFilter","startIndex","endIndex","isNext","isPrevious","onClick","previousPage","className","role","viewBox","fill","xmlns","d","Math","ceil","nextPage","translations","en","getTranslate","locale","key","String","initialState","translate","localeReducer","state","action","LocaleContext","createContext","LocaleContextProvider","useReducer","dispatch","Provider","value","getIdFromUrl","url","split","slice","messages","appTitle","selectPlaceholder","noResult","types","abilities","evolutions","typePageTitle","HomePage","useState","pokemons","setPokemons","setTypes","setCurrentPage","paginationAPI","setPaginationAPI","pagination","setPagination","setIsFilter","useContext","defaultSelectValue","selectedType","setSelectedType","fetchPokemons","a","fetch","res","json","response","results","count","useEffect","totalPages","cp","startPage","endPage","min","totalOfPages","paginate","fetchTypes","noFilterFetch","filterByType","event","selectedOption","target","selectedIndex","pokemon","map","poke","length","isEmpty","onChange","disabled","name","uniqueId","to","data-testid","Pokemon","setPokemon","fetchPokemon","evolutionUrl","evol","evolutionResponse","id","match","params","alt","src","sprites","front_default","ab","slot","ability","evoChain","evoData","chain","numberOfEvolutions","evolves_to","push","species_name","get","index","Number","parseInt","undefined","formatEvolutions","evo","Types","App","basename","path","component","exact","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.48a7f3c4.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components';\n\nconst Wrapper = styled.header`\ngrid-area: header;\nheight: 180px;\npadding: 20px;\nfont-size: 30px;\nfont-weight: bold;\nmargin-bottom: 20px;\nbackground-color: #0E1111;\ncolor: #eee;\ndisplay: flex;\nalign-items: center;\njustify-content: center;\n`\n\nconst Header = (props) => {\n    return <Wrapper>{props.children}</Wrapper>\n\n}\n\nexport default Header;","import React from 'react'\nimport styled from 'styled-components';\n\nconst Wrapper = styled.footer`\n    grid-area: footer;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`\n\nconst Footer = (props) => {\n    return <Wrapper>This application was made for a challenge</Wrapper>\n\n}\n\nexport default Footer;","import React from 'react'\nimport styled from \"styled-components\";\nimport Loader from 'react-loader-spinner'\n\nconst GlobalLoader = styled.div`\nwidth: 100%;\nmin-height: 100vh;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\n`\n\nconst AppLoader = () => {\n    return (<GlobalLoader><Loader\n        type=\"Puff\"\n        color=\"#0E1111\"\n        height={100}\n        width={100}\n        timeout={10000}/>\n        </GlobalLoader>)\n}\n\nexport default AppLoader;","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst PaginateWrapper = styled.article`\n    width: 100%;\n    padding: 10px;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n  .paginate {\n    cursor: pointer;\n  }\n  .disabled {\n    cursor: not-allowed;\n  }\n  .pagination-counter {\n    font-size: 18px;\n  }\n`;\n\nconst Pagination = (props) => {\nconst { next, previous, totalItems, currentPage, pageSize , isFilter, startIndex, endIndex  } = props.details\nconst isNext = () => {\n  if(isFilter){\n    return endIndex + 1 < totalItems\n  }\n  return !!next\n}\nconst isPrevious = () => {\n  if(isFilter){\n    return startIndex !== 0\n  }\n  return !!previous\n}\n\n  return (\n    <PaginateWrapper>\n      <div\n        onClick={props.previousPage}\n        className={isPrevious()? \"paginate\" : \"disabled\"}\n        role=\"button\"\n      >\n        <svg\n          height=\"64\"\n          viewBox=\"0 0 24 24\"\n          width=\"64\"\n          fill={isPrevious()? \"#000\" : \"#d3d3d3\"}\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path d=\"M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z\" />\n          <path d=\"M0-.5h24v24H0z\" fill=\"none\" />\n        </svg>\n      </div>\n\n      <div className=\"pagination-counter\">\n        {currentPage} of {Math.ceil(totalItems/pageSize)}\n      </div>\n      <div\n        onClick={props.nextPage}\n        role=\"button\"\n        className={isNext()? \"paginate\" : \"disabled\"}\n      >\n        <svg\n          height=\"64\"\n          fill={isNext()? \"#000\" : \"#d3d3d3\"}\n          viewBox=\"0 0 24 24\"\n          width=\"64\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path d=\"M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z\" />\n          <path d=\"M0-.25h24v24H0z\" fill=\"none\" />\n        </svg>\n      </div>\n    </PaginateWrapper>\n  );\n};\n\nexport default Pagination;\n","import enTranslations from './en.json';\n\nconst translations = {\n  en: enTranslations,\n};\n\nexport default translations;\n","import translations from '../../translations';\n\nexport const getTranslate = (locale) => (key) =>\n  translations[String(locale)][String(key)] || key;\n\nexport default { getTranslate };\n","import {\n  CHANGE_LOCALE,\n  RESET_LOCALE,\n  DEFAULT_LOCALE,\n} from './constants';\nimport { getTranslate } from './helper';\n\nexport const initialState = {\n  locale: DEFAULT_LOCALE,\n  translate: getTranslate(DEFAULT_LOCALE),\n};\n\nconst localeReducer = (state, action) => {\n  switch (action.type) {\n    case CHANGE_LOCALE:\n      return {\n        locale: action.locale,\n        translate: getTranslate(action.locale),\n      };\n    case RESET_LOCALE:\n      return { ...initialState };\n    default:\n      return { ...initialState };\n  }\n};\n\nexport default localeReducer;\n","export const DEFAULT_LOCALE = 'en';\nexport const CHANGE_LOCALE = 'CHANGE_LOCALE';\nexport const RESET_LOCALE = 'RESET_LOCALE';\n","import React, { createContext, useReducer } from 'react';\nimport localeReducer, { initialState } from './reducer';\n\nexport const LocaleContext = createContext(initialState);\n\nexport const LocaleContextProvider = ({ children }) => {\n  // dispatch reducer\n  const [state, dispatch] = useReducer(localeReducer, initialState);\n\n  return (\n    <LocaleContext.Provider value={{ ...state, dispatch }}>\n      {children}\n    </LocaleContext.Provider>\n  );\n};\n\nexport default LocaleContextProvider;\n","import { get } from 'lodash';\n\nexport const paginate = (\n  totalItems,\n  currentPage = 1,\n  pageSize = 20,\n) => {\n  const totalPages = Math.ceil(totalItems / pageSize);\n  let cp = 1;\n\n  if (currentPage < 1) {\n    cp = 1;\n  } else if (currentPage > totalPages) {\n    cp = totalPages;\n  }\n\n  const startPage = 1;\n  const endPage = totalPages;\n\n  const startIndex = (cp - 1) * pageSize;\n  const endIndex = Math.min(\n    startIndex + pageSize - 1,\n    totalItems - 1,\n  );\n\n  return {\n    totalItems,\n    currentPage: cp,\n    pageSize,\n    totalOfPages: totalPages,\n    startPage,\n    endPage,\n    startIndex,\n    endIndex,\n  };\n};\n\nexport const getIdFromUrl = (url) => url.split('/').slice(-2)[0];\n\nexport const formatEvolutions = (pokemon) => {\n  const evoChain = [];\n  let evoData = pokemon.chain;\n\n  do {\n    const numberOfEvolutions = evoData.evolves_to.length;\n\n    evoChain.push({\n      species_name: get(evoData, 'species.name'),\n    });\n\n    if (numberOfEvolutions > 1) {\n      for (let index = 1; index < numberOfEvolutions; index += 1) {\n        evoChain.push({\n          species_name: get(\n            evoData.evolves_to[Number.parseInt(index, 10)],\n            'species.name',\n          ),\n        });\n      }\n    }\n\n    evoData = { ...evoData.evolves_to[0] };\n  } while (evoData !== undefined && 'evolves_to' in evoData);\n\n  return evoChain;\n};\n","const messages = {\n  appTitle: 'application_title',\n  selectPlaceholder: 'home_page.select_placeholder',\n  noResult: 'home_page.search_no_result',\n  types: 'pokemon_page.types',\n  abilities: 'pokemon_page.abilities',\n  evolutions: 'pokemon_page.evolutions',\n  typePageTitle: 'type_page.title',\n};\nexport default messages;\n","import React, { useEffect, useState, useContext } from 'react';\nimport styled from 'styled-components';\nimport { uniqueId, isEmpty } from 'lodash';\nimport { Link } from 'react-router-dom';\n\nimport Header from '../../components/Header';\nimport Footer from '../../components/Footer';\nimport AppLoader from '../../components/Loader';\nimport Pagination from '../../components/Pagination';\nimport { LocaleContext } from '../LocaleProvider/index';\n\nimport { paginate, getIdFromUrl } from './utils';\nimport messages from './messages';\n\nconst Wrapper = styled.div`\n  width: 100%;\n  min-height: 100vh;\n  position: relative;\n  display: grid;\n  grid-template-rows: 1.25fr 6fr 1fr;\n  grid-template-areas: 'header header header' 'content content content' 'footer footer footer';\n  background: #e2e1e0;\n  section {\n    grid-area: content;\n    display: flex;\n    flex-direction: column;\n    width: 75%;\n    margin: 0 auto;\n    color: #000;\n  }\n  .pokemons-container {\n    display: flex;\n    flex-wrap: wrap;\n    align-content: flex-start;\n    align-items: center;\n    width: 90%;\n    margin: 0 auto;\n  }\n  .listing-container {\n    width: 95%;\n    margin: 0 auto;\n  }\n  .pokemon {\n    padding: 10px;\n    margin: 15px;\n    width: 150px;\n    height: 100px;\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12),\n      0 1px 2px rgba(0, 0, 0, 0.24);\n    transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);\n    background: #fff;\n    display: flex;\n    font-size: 20px;\n    align-items: center;\n    justify-content: center;\n  }\n  .pokemon:hover {\n    box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25),\n      0 10px 10px rgba(0, 0, 0, 0.22);\n  }\n  .filter {\n    padding: 20px;\n    width: 50%;\n  }\n  .filter select {\n    width: 150px;\n    height: 30px;\n  }\n`;\n\nexport const HomePage = () => {\n  const [pokemons, setPokemons] = useState([]);\n  const [types, setTypes] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [paginationAPI, setPaginationAPI] = useState({\n    totalItems: 0,\n    next: null,\n    previous: null,\n    pageSize: 20,\n  });\n  const [pagination, setPagination] = useState({});\n  const [isFilter, setIsFilter] = useState(false);\n\n  const { translate } = useContext(LocaleContext);\n  const defaultSelectValue = translate(messages.selectPlaceholder);\n  const [selectedType, setSelectedType] = useState(\n    defaultSelectValue,\n  );\n\n  const fetchPokemons = async (url) => {\n    const res = await fetch(url);\n    const response = await res.json();\n    setPokemons(response.results);\n    setPaginationAPI({\n      ...paginationAPI,\n      totalItems: response.count,\n      previous: response.previous,\n      next: response.next,\n    });\n  };\n\n  useEffect(() => {\n    setPagination(\n      paginate(\n        paginationAPI.totalItems,\n        currentPage,\n        paginationAPI.pageSize,\n      ),\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentPage, paginationAPI.totalItems]);\n\n  const fetchTypes = async (url) => {\n    const res = await fetch(url);\n    const response = await res.json();\n    setTypes(response.results);\n  };\n\n  useEffect(() => {\n    fetchPokemons('https://pokeapi.co/api/v2/pokemon');\n    fetchTypes('https://pokeapi.co/api/v2/type');\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const nextPage = () => {\n    const activePage = currentPage + 1;\n    setCurrentPage(activePage);\n    noFilterFetch(paginationAPI.next);\n  };\n\n  const previousPage = () => {\n    const activePage = currentPage - 1;\n    setCurrentPage(activePage);\n    noFilterFetch(paginationAPI.previous);\n  };\n\n  const noFilterFetch = (url) => {\n    if (!isFilter) {\n      fetchPokemons(url);\n    }\n  };\n\n  const filterByType = async (event) => {\n    const selectedOption = event.target[event.target.selectedIndex];\n    setSelectedType(selectedOption.value);\n    setIsFilter(true);\n\n    const res = await fetch(selectedOption.value);\n    const response = await res.json();\n    const pokemons = response.pokemon.map((poke) => poke.pokemon);\n    setPokemons(pokemons);\n    setCurrentPage(1);\n    setPaginationAPI({\n      ...paginationAPI,\n      totalItems: response.pokemon.length,\n    });\n  };\n\n  const formatPokemonsByFilter = () => {\n    if (!isFilter) return pokemons;\n\n    return pokemons.slice(pagination.startIndex, pagination.endIndex);\n  };\n\n  if (isEmpty(pokemons) && !isFilter) return <AppLoader />;\n  return (\n    <Wrapper>\n      <Header>{translate(messages.appTitle)}</Header>\n      <section>\n        <article className=\"filter\">\n          <select value={selectedType} onChange={filterByType}>\n            <option disabled>{defaultSelectValue}</option>\n            {types.map((type) => (\n              <option\n                name={type.name}\n                key={uniqueId(`${type.name}`)}\n                value={type.url}\n              >\n                {type.name}\n              </option>\n            ))}\n          </select>\n        </article>\n        <article className=\"listing-container\">\n          <div className=\"pokemons-container\">\n            {formatPokemonsByFilter().map((pokemon) => (\n              <Link\n                to={`/pokemon/${getIdFromUrl(pokemon.url)}`}\n                key={uniqueId()}\n              >\n                <div data-testid=\"single-pokemon\" className=\"pokemon\">\n                  {pokemon.name}\n                </div>\n              </Link>\n            ))}\n          </div>\n          {isEmpty(pokemons) && isFilter && (\n            <div>{translate(messages.noResult)}</div>\n          )}\n        </article>\n        {!isEmpty(pokemons) && (\n          <Pagination\n            details={{\n              ...paginationAPI,\n              currentPage,\n              isFilter,\n              startIndex: pagination.startIndex,\n              endIndex: pagination.endIndex,\n            }}\n            nextPage={nextPage}\n            previousPage={previousPage}\n          />\n        )}\n      </section>\n      <Footer />\n    </Wrapper>\n  );\n};\n\nexport default HomePage;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { uniqueId, isEmpty} from \"lodash\";\nimport { Link } from \"react-router-dom\";\n\nimport AppLoader from \"../../components/Loader\";\nimport Header from \"../../components/Header\";\nimport Footer from \"../../components/Footer\";\nimport { getIdFromUrl, formatEvolutions } from \"./utils\";\n\nimport { LocaleContext } from '../LocaleProvider/index'\nimport messages from './messages';\n\n\nconst Wrapper = styled.div`\n  width: 100%;\n  min-height: 50vh;\n  position: relative;\n  display: grid;\n  grid-template-rows: 1fr 6fr 1fr;\n  grid-template-areas: \"header header header\" \"content content content\" \"footer footer footer\";\n  background: #e2e1e0;\n  main {\n    grid-area: content;\n    display: flex;\n    flex-direction: column;\n    width: 55%;\n    margin: 30px auto;\n    color: #000;\n  }\n  .pokemon-detail {\n    padding: 20px;\n    width: 80%;\n    margin: 0 auto;\n    background-color: #fff;\n    display: flex;\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n    transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);\n  }\n  img {\n    width: 150px;\n  }\n  .detail {\n    padding: 20px;\n    background-color: #eee;\n    width: 70%;\n    display: column;\n  }\n  .name {\n    font-size: 18px;\n    font-family: Roboto;\n    font-weight: bold;\n    text-transform: uppercase;\n  }\n  .type,\n  .abilities,\n  .evolution {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n  }\n  .type div,\n  .abilities div,\n  .evolution div {\n    margin-left: -35px;\n  }\n`;\n\n\nconst Pokemon = (props) => {\n  const [pokemon, setPokemon] = useState({});\n\n  useEffect(() => {\n    const fetchPokemon = async (url, evolutionUrl) => {\n      const res = await fetch(url);\n      const evol = await fetch(evolutionUrl);\n      const evolutionResponse = await evol.json();\n      const response = await res.json();\n\n      setPokemon({ ...response, ...evolutionResponse });\n    };\n\n    const id = props.match.params.id;\n    fetchPokemon(\n      `https://pokeapi.co/api/v2/pokemon/${id}`,\n      `https://pokeapi.co/api/v2/evolution-chain/${id}/`\n    );\n  }, [props.match.params.id]);\n\n\n  const { translate } = useContext(LocaleContext);\n\n\n  if (isEmpty(pokemon)) return <AppLoader />\n\n  return (\n    <Wrapper>\n      <Header>{pokemon.name}</Header>\n      <main>\n        <section className=\"pokemon-detail\">\n          <article className=\"img\">\n            <img alt={pokemon.name} src={pokemon.sprites.front_default} />\n          </article>\n          <article className=\"detail\">\n            <div className=\"name\">{pokemon.name}</div>\n            <ul className=\"type\">\n              <div>{translate(messages.types)}</div>\n              {pokemon.types.map((type) => (\n                <Link key={uniqueId(`${pokemon.name}`)} to={`/types/${getIdFromUrl(type.type.url)}`}><li >{type.type.name}</li></Link>\n              ))}\n            </ul>\n            <ul className=\"abilities\">\n              <div>{translate(messages.abilities)}</div>\n              {pokemon.abilities.map((ab) => (\n                <li key={ab.slot}>{ab.ability.name}</li>\n              ))}\n            </ul>\n            <ul className=\"evolution\">\n              <div>{translate(messages.evolutions)}</div>\n              {formatEvolutions(pokemon).map((evo) => (\n                <li key={uniqueId()}>{evo.species_name}</li>\n              ))}\n            </ul>\n          </article>\n        </section>\n      </main>\n      <Footer />\n    </Wrapper>\n  );\n};\n\nexport default Pokemon;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { uniqueId, isEmpty } from \"lodash\";\n\nimport AppLoader from \"../../components/Loader\";\nimport Header from \"../../components/Header\";\nimport Footer from \"../../components/Footer\";\n\nimport { LocaleContext } from '../LocaleProvider/index'\nimport messages from './messages';\n\nconst Wrapper = styled.div`\n  width: 100%;\n  min-height: 100vh;\n  position: relative;\n  display: grid;\n  grid-template-rows: 1fr 6fr 1fr;\n  grid-template-areas: \"header header header\" \"content content content\" \"footer footer footer\";\n  background: #e2e1e0;\n  main {\n    grid-area: content;\n    width: 90%;\n    margin: 0 auto;\n    color: #000;\n  }\n  .types-container {\n    display: flex;\n    flex-wrap: wrap;\n    align-content: flex-start;\n  }\n  .types {\n    padding: 10px;\n    margin: 15px;\n    width: 150px;\n    height: 100px;\n    box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n    transition: all 0.3s cubic-bezier(.25,.8,.25,1);\n    background: #fff;\n    display: flex;\n    font-size: 20px;\n    align-items: center;\n    justify-content: center;\n  }\n  .types:hover {\n    box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);  \n  }\n`;\n\n\nconst Types = (props) => {\n  const [types, setTypes] = useState([]);\n\n  useEffect(() => {\n    const fetchPokemon = async (url) => {\n      const res = await fetch(url);\n      const response = await res.json();\n\n      setTypes(response);\n    };\n\n    const type = props.match.params.type;\n    fetchPokemon(\n      `https://pokeapi.co/api/v2/type/${type}`,\n    );\n  }, [props.match.params.type]);\n\n  const {translate} = useContext(LocaleContext);\n\n\n  if (isEmpty(types))\n    return (\n      <AppLoader/>\n    );\n\n  return (\n    <Wrapper>\n      <Header>{translate(messages.typePageTitle)}</Header>\n      <main>\n        <section className=\"types-container\">\n         {types.pokemon.map(type=>(\n             <div key={uniqueId()} className=\"types\">\n                 {type.pokemon.name}\n             </div>\n         ))}\n        </section>\n      </main>\n      <Footer/>\n    </Wrapper>\n  );\n};\n\nexport default Types;\n","/* istanbul ignore file */\nimport React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport HomePage from './containers/Pokemons/HomePage';\nimport Pokemon from './containers/Pokemons/Pokemon';\nimport Types from './containers/Pokemons/Types';\n\nfunction App() {\n  return (\n    <div>\n      <BrowserRouter basename=\"pokeapi-challenge\">\n        <Switch>\n          <Route path=\"/\" component={HomePage} exact />\n          <Route path=\"/pokemon/:id\" component={Pokemon} />\n          <Route path=\"/types/:type\" component={Types} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","/* istanbul ignore file */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n  ),\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator\n  ) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href,\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\n        'Error during service worker registration:',\n        error,\n      );\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null &&\n          contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","/* istanbul ignore file */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport LocaleContextProvider from './containers/LocaleProvider';\n\nReactDOM.render(\n  <React.StrictMode>\n    <LocaleContextProvider>\n      <App />\n    </LocaleContextProvider>\n    ,\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}